// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: partychain/party/finalizing_orders.proto

package types

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type FinalizingOrders struct {
	Index                            string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	BuyerEscrowWalletPublicKey       string `protobuf:"bytes,2,opt,name=buyerEscrowWalletPublicKey,proto3" json:"buyerEscrowWalletPublicKey,omitempty"`
	BuyerEscrowWalletPrivateKey      string `protobuf:"bytes,3,opt,name=buyerEscrowWalletPrivateKey,proto3" json:"buyerEscrowWalletPrivateKey,omitempty"`
	SellerEscrowWalletPublicKey      string `protobuf:"bytes,4,opt,name=sellerEscrowWalletPublicKey,proto3" json:"sellerEscrowWalletPublicKey,omitempty"`
	SellerEscrowWalletPrivateKey     string `protobuf:"bytes,5,opt,name=sellerEscrowWalletPrivateKey,proto3" json:"sellerEscrowWalletPrivateKey,omitempty"`
	SellerPaymentComplete            bool   `protobuf:"varint,6,opt,name=sellerPaymentComplete,proto3" json:"sellerPaymentComplete,omitempty"`
	SellerPaymentCompleteBlockHeight int32  `protobuf:"varint,7,opt,name=sellerPaymentCompleteBlockHeight,proto3" json:"sellerPaymentCompleteBlockHeight,omitempty"`
	BuyerPaymentComplete             bool   `protobuf:"varint,8,opt,name=buyerPaymentComplete,proto3" json:"buyerPaymentComplete,omitempty"`
	BuyerPaymentCompleteBlockHeight  int32  `protobuf:"varint,9,opt,name=buyerPaymentCompleteBlockHeight,proto3" json:"buyerPaymentCompleteBlockHeight,omitempty"`
	Amount                           string `protobuf:"bytes,10,opt,name=amount,proto3" json:"amount,omitempty"`
	BuyerShippingAddress             string `protobuf:"bytes,11,opt,name=buyerShippingAddress,proto3" json:"buyerShippingAddress,omitempty"`
	BuyerRefundAddress               string `protobuf:"bytes,12,opt,name=buyerRefundAddress,proto3" json:"buyerRefundAddress,omitempty"`
	BuyerNKNAddress                  string `protobuf:"bytes,13,opt,name=buyerNKNAddress,proto3" json:"buyerNKNAddress,omitempty"`
	SellerRefundAddress              string `protobuf:"bytes,14,opt,name=sellerRefundAddress,proto3" json:"sellerRefundAddress,omitempty"`
	SellerShippingAddress            string `protobuf:"bytes,15,opt,name=sellerShippingAddress,proto3" json:"sellerShippingAddress,omitempty"`
	SellerNKNAddress                 string `protobuf:"bytes,16,opt,name=sellerNKNAddress,proto3" json:"sellerNKNAddress,omitempty"`
	TradeAsset                       string `protobuf:"bytes,17,opt,name=tradeAsset,proto3" json:"tradeAsset,omitempty"`
	Currency                         string `protobuf:"bytes,18,opt,name=currency,proto3" json:"currency,omitempty"`
	Price                            string `protobuf:"bytes,19,opt,name=price,proto3" json:"price,omitempty"`
	BlockHeight                      int32  `protobuf:"varint,20,opt,name=blockHeight,proto3" json:"blockHeight,omitempty"`
}

func (m *FinalizingOrders) Reset()         { *m = FinalizingOrders{} }
func (m *FinalizingOrders) String() string { return proto.CompactTextString(m) }
func (*FinalizingOrders) ProtoMessage()    {}
func (*FinalizingOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor_96370326d2e2b69e, []int{0}
}
func (m *FinalizingOrders) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FinalizingOrders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FinalizingOrders.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FinalizingOrders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinalizingOrders.Merge(m, src)
}
func (m *FinalizingOrders) XXX_Size() int {
	return m.Size()
}
func (m *FinalizingOrders) XXX_DiscardUnknown() {
	xxx_messageInfo_FinalizingOrders.DiscardUnknown(m)
}

var xxx_messageInfo_FinalizingOrders proto.InternalMessageInfo

func (m *FinalizingOrders) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *FinalizingOrders) GetBuyerEscrowWalletPublicKey() string {
	if m != nil {
		return m.BuyerEscrowWalletPublicKey
	}
	return ""
}

func (m *FinalizingOrders) GetBuyerEscrowWalletPrivateKey() string {
	if m != nil {
		return m.BuyerEscrowWalletPrivateKey
	}
	return ""
}

func (m *FinalizingOrders) GetSellerEscrowWalletPublicKey() string {
	if m != nil {
		return m.SellerEscrowWalletPublicKey
	}
	return ""
}

func (m *FinalizingOrders) GetSellerEscrowWalletPrivateKey() string {
	if m != nil {
		return m.SellerEscrowWalletPrivateKey
	}
	return ""
}

func (m *FinalizingOrders) GetSellerPaymentComplete() bool {
	if m != nil {
		return m.SellerPaymentComplete
	}
	return false
}

func (m *FinalizingOrders) GetSellerPaymentCompleteBlockHeight() int32 {
	if m != nil {
		return m.SellerPaymentCompleteBlockHeight
	}
	return 0
}

func (m *FinalizingOrders) GetBuyerPaymentComplete() bool {
	if m != nil {
		return m.BuyerPaymentComplete
	}
	return false
}

func (m *FinalizingOrders) GetBuyerPaymentCompleteBlockHeight() int32 {
	if m != nil {
		return m.BuyerPaymentCompleteBlockHeight
	}
	return 0
}

func (m *FinalizingOrders) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *FinalizingOrders) GetBuyerShippingAddress() string {
	if m != nil {
		return m.BuyerShippingAddress
	}
	return ""
}

func (m *FinalizingOrders) GetBuyerRefundAddress() string {
	if m != nil {
		return m.BuyerRefundAddress
	}
	return ""
}

func (m *FinalizingOrders) GetBuyerNKNAddress() string {
	if m != nil {
		return m.BuyerNKNAddress
	}
	return ""
}

func (m *FinalizingOrders) GetSellerRefundAddress() string {
	if m != nil {
		return m.SellerRefundAddress
	}
	return ""
}

func (m *FinalizingOrders) GetSellerShippingAddress() string {
	if m != nil {
		return m.SellerShippingAddress
	}
	return ""
}

func (m *FinalizingOrders) GetSellerNKNAddress() string {
	if m != nil {
		return m.SellerNKNAddress
	}
	return ""
}

func (m *FinalizingOrders) GetTradeAsset() string {
	if m != nil {
		return m.TradeAsset
	}
	return ""
}

func (m *FinalizingOrders) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *FinalizingOrders) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *FinalizingOrders) GetBlockHeight() int32 {
	if m != nil {
		return m.BlockHeight
	}
	return 0
}

func init() {
	proto.RegisterType((*FinalizingOrders)(nil), "teapartycrypto.partychain.party.FinalizingOrders")
}

func init() {
	proto.RegisterFile("partychain/party/finalizing_orders.proto", fileDescriptor_96370326d2e2b69e)
}

var fileDescriptor_96370326d2e2b69e = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x63, 0x20, 0x69, 0x3a, 0x05, 0x1a, 0xa6, 0x01, 0x59, 0x05, 0xb9, 0x11, 0x27, 0x8b,
	0x43, 0x82, 0x0a, 0x67, 0x44, 0x53, 0x81, 0x2a, 0x8a, 0x4a, 0x14, 0x90, 0x90, 0xb8, 0xa0, 0xb5,
	0x3d, 0x4d, 0x56, 0x38, 0x5e, 0x6b, 0xbd, 0x86, 0x9a, 0xa7, 0xe0, 0xb1, 0x38, 0xf6, 0xc8, 0x09,
	0xa1, 0xe4, 0x45, 0x50, 0xc6, 0x6d, 0x62, 0xd2, 0x25, 0xbd, 0x79, 0xfe, 0xff, 0xfb, 0xc7, 0xe3,
	0x5d, 0x79, 0xc0, 0x4f, 0x85, 0x36, 0x45, 0x38, 0x16, 0x32, 0xe9, 0xf1, 0x63, 0xef, 0x54, 0x26,
	0x22, 0x96, 0xdf, 0x65, 0x32, 0xfa, 0xac, 0x74, 0x44, 0x3a, 0xeb, 0xa6, 0x5a, 0x19, 0x85, 0x7b,
	0x86, 0x44, 0x09, 0xeb, 0x22, 0x35, 0xaa, 0xbb, 0x0c, 0x96, 0x8f, 0x8f, 0x7f, 0x6f, 0x40, 0xeb,
	0xf5, 0x22, 0xfc, 0x8e, 0xb3, 0xd8, 0x86, 0xba, 0x4c, 0x22, 0x3a, 0x73, 0x9d, 0x8e, 0xe3, 0x6f,
	0x0e, 0xcb, 0x02, 0x5f, 0xc0, 0x6e, 0x90, 0x17, 0xa4, 0x5f, 0x65, 0xa1, 0x56, 0xdf, 0x3e, 0x8a,
	0x38, 0x26, 0x33, 0xc8, 0x83, 0x58, 0x86, 0xc7, 0x54, 0xb8, 0x37, 0x18, 0x5d, 0x43, 0xe0, 0x4b,
	0x78, 0x78, 0xd5, 0xd5, 0xf2, 0xab, 0x30, 0x34, 0x6f, 0x70, 0x93, 0x1b, 0xac, 0x43, 0xe6, 0x1d,
	0x32, 0x8a, 0xe3, 0xff, 0x8d, 0x70, 0xab, 0xec, 0xb0, 0x06, 0xc1, 0x3e, 0x3c, 0xb2, 0xd8, 0xcb,
	0x21, 0xea, 0xdc, 0x62, 0x2d, 0x83, 0xcf, 0xe1, 0x7e, 0xe9, 0x0f, 0x44, 0x31, 0xa1, 0xc4, 0x1c,
	0xaa, 0x49, 0x1a, 0x93, 0x21, 0xb7, 0xd1, 0x71, 0xfc, 0xe6, 0xd0, 0x6e, 0xe2, 0x1b, 0xe8, 0x58,
	0x8d, 0x7e, 0xac, 0xc2, 0x2f, 0x47, 0x24, 0x47, 0x63, 0xe3, 0x6e, 0x74, 0x1c, 0xbf, 0x3e, 0xbc,
	0x96, 0xc3, 0x7d, 0x68, 0xf3, 0x31, 0xad, 0x0e, 0xd0, 0xe4, 0x01, 0xac, 0x1e, 0x1e, 0xc1, 0x9e,
	0x4d, 0xaf, 0xbe, 0x7e, 0x93, 0x5f, 0x7f, 0x1d, 0x86, 0x0f, 0xa0, 0x21, 0x26, 0x2a, 0x4f, 0x8c,
	0x0b, 0x7c, 0x5a, 0x17, 0xd5, 0x62, 0xaa, 0xf7, 0x63, 0x99, 0xa6, 0x32, 0x19, 0x1d, 0x44, 0x91,
	0xa6, 0x2c, 0x73, 0xb7, 0x98, 0xb2, 0x7a, 0xd8, 0x05, 0x64, 0x7d, 0x48, 0xa7, 0x79, 0x12, 0x5d,
	0x26, 0x6e, 0x73, 0xc2, 0xe2, 0xa0, 0x0f, 0xdb, 0xac, 0x9e, 0x1c, 0x9f, 0x5c, 0xc2, 0x77, 0x18,
	0x5e, 0x95, 0xf1, 0x29, 0xec, 0x94, 0xe7, 0xf8, 0x6f, 0xeb, 0xbb, 0x4c, 0xdb, 0xac, 0xe5, 0xbd,
	0xae, 0x7e, 0xc0, 0x36, 0x67, 0xec, 0x26, 0x3e, 0x81, 0x56, 0x69, 0x54, 0x46, 0x6a, 0x71, 0xe0,
	0x8a, 0x8e, 0x1e, 0x80, 0xd1, 0x22, 0xa2, 0x83, 0x2c, 0x23, 0xe3, 0xde, 0x63, 0xaa, 0xa2, 0xe0,
	0x2e, 0x34, 0xc3, 0x5c, 0x6b, 0x4a, 0xc2, 0xc2, 0x45, 0x76, 0x17, 0xf5, 0xfc, 0x9f, 0x4c, 0xb5,
	0x0c, 0xc9, 0xdd, 0x29, 0xff, 0x49, 0x2e, 0xb0, 0x03, 0x5b, 0x41, 0xe5, 0x06, 0xdb, 0x7c, 0x83,
	0x55, 0xa9, 0xff, 0xf6, 0xe7, 0xd4, 0x73, 0xce, 0xa7, 0x9e, 0xf3, 0x67, 0xea, 0x39, 0x3f, 0x66,
	0x5e, 0xed, 0x7c, 0xe6, 0xd5, 0x7e, 0xcd, 0xbc, 0xda, 0xa7, 0xfd, 0x91, 0x34, 0xe3, 0x3c, 0xe8,
	0x86, 0x6a, 0xd2, 0xfb, 0x40, 0x62, 0x30, 0xdf, 0x07, 0x87, 0xbc, 0x26, 0x7a, 0x95, 0xfd, 0x72,
	0x76, 0xb1, 0x61, 0x4c, 0x91, 0x52, 0x16, 0x34, 0x78, 0xad, 0x3c, 0xfb, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0xf5, 0x0e, 0xa5, 0x89, 0x82, 0x04, 0x00, 0x00,
}

func (m *FinalizingOrders) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FinalizingOrders) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FinalizingOrders) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BlockHeight != 0 {
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(m.BlockHeight))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if len(m.Price) > 0 {
		i -= len(m.Price)
		copy(dAtA[i:], m.Price)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.Price)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if len(m.Currency) > 0 {
		i -= len(m.Currency)
		copy(dAtA[i:], m.Currency)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.Currency)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.TradeAsset) > 0 {
		i -= len(m.TradeAsset)
		copy(dAtA[i:], m.TradeAsset)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.TradeAsset)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.SellerNKNAddress) > 0 {
		i -= len(m.SellerNKNAddress)
		copy(dAtA[i:], m.SellerNKNAddress)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.SellerNKNAddress)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.SellerShippingAddress) > 0 {
		i -= len(m.SellerShippingAddress)
		copy(dAtA[i:], m.SellerShippingAddress)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.SellerShippingAddress)))
		i--
		dAtA[i] = 0x7a
	}
	if len(m.SellerRefundAddress) > 0 {
		i -= len(m.SellerRefundAddress)
		copy(dAtA[i:], m.SellerRefundAddress)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.SellerRefundAddress)))
		i--
		dAtA[i] = 0x72
	}
	if len(m.BuyerNKNAddress) > 0 {
		i -= len(m.BuyerNKNAddress)
		copy(dAtA[i:], m.BuyerNKNAddress)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.BuyerNKNAddress)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.BuyerRefundAddress) > 0 {
		i -= len(m.BuyerRefundAddress)
		copy(dAtA[i:], m.BuyerRefundAddress)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.BuyerRefundAddress)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.BuyerShippingAddress) > 0 {
		i -= len(m.BuyerShippingAddress)
		copy(dAtA[i:], m.BuyerShippingAddress)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.BuyerShippingAddress)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x52
	}
	if m.BuyerPaymentCompleteBlockHeight != 0 {
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(m.BuyerPaymentCompleteBlockHeight))
		i--
		dAtA[i] = 0x48
	}
	if m.BuyerPaymentComplete {
		i--
		if m.BuyerPaymentComplete {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.SellerPaymentCompleteBlockHeight != 0 {
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(m.SellerPaymentCompleteBlockHeight))
		i--
		dAtA[i] = 0x38
	}
	if m.SellerPaymentComplete {
		i--
		if m.SellerPaymentComplete {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.SellerEscrowWalletPrivateKey) > 0 {
		i -= len(m.SellerEscrowWalletPrivateKey)
		copy(dAtA[i:], m.SellerEscrowWalletPrivateKey)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.SellerEscrowWalletPrivateKey)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.SellerEscrowWalletPublicKey) > 0 {
		i -= len(m.SellerEscrowWalletPublicKey)
		copy(dAtA[i:], m.SellerEscrowWalletPublicKey)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.SellerEscrowWalletPublicKey)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.BuyerEscrowWalletPrivateKey) > 0 {
		i -= len(m.BuyerEscrowWalletPrivateKey)
		copy(dAtA[i:], m.BuyerEscrowWalletPrivateKey)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.BuyerEscrowWalletPrivateKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BuyerEscrowWalletPublicKey) > 0 {
		i -= len(m.BuyerEscrowWalletPublicKey)
		copy(dAtA[i:], m.BuyerEscrowWalletPublicKey)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.BuyerEscrowWalletPublicKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintFinalizingOrders(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintFinalizingOrders(dAtA []byte, offset int, v uint64) int {
	offset -= sovFinalizingOrders(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *FinalizingOrders) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.BuyerEscrowWalletPublicKey)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.BuyerEscrowWalletPrivateKey)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.SellerEscrowWalletPublicKey)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.SellerEscrowWalletPrivateKey)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	if m.SellerPaymentComplete {
		n += 2
	}
	if m.SellerPaymentCompleteBlockHeight != 0 {
		n += 1 + sovFinalizingOrders(uint64(m.SellerPaymentCompleteBlockHeight))
	}
	if m.BuyerPaymentComplete {
		n += 2
	}
	if m.BuyerPaymentCompleteBlockHeight != 0 {
		n += 1 + sovFinalizingOrders(uint64(m.BuyerPaymentCompleteBlockHeight))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.BuyerShippingAddress)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.BuyerRefundAddress)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.BuyerNKNAddress)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.SellerRefundAddress)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.SellerShippingAddress)
	if l > 0 {
		n += 1 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.SellerNKNAddress)
	if l > 0 {
		n += 2 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.TradeAsset)
	if l > 0 {
		n += 2 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.Currency)
	if l > 0 {
		n += 2 + l + sovFinalizingOrders(uint64(l))
	}
	l = len(m.Price)
	if l > 0 {
		n += 2 + l + sovFinalizingOrders(uint64(l))
	}
	if m.BlockHeight != 0 {
		n += 2 + sovFinalizingOrders(uint64(m.BlockHeight))
	}
	return n
}

func sovFinalizingOrders(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozFinalizingOrders(x uint64) (n int) {
	return sovFinalizingOrders(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *FinalizingOrders) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowFinalizingOrders
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FinalizingOrders: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FinalizingOrders: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerEscrowWalletPublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuyerEscrowWalletPublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerEscrowWalletPrivateKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuyerEscrowWalletPrivateKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerEscrowWalletPublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerEscrowWalletPublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerEscrowWalletPrivateKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerEscrowWalletPrivateKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerPaymentComplete", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SellerPaymentComplete = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerPaymentCompleteBlockHeight", wireType)
			}
			m.SellerPaymentCompleteBlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SellerPaymentCompleteBlockHeight |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerPaymentComplete", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.BuyerPaymentComplete = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerPaymentCompleteBlockHeight", wireType)
			}
			m.BuyerPaymentCompleteBlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BuyerPaymentCompleteBlockHeight |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerShippingAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuyerShippingAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerRefundAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuyerRefundAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuyerNKNAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuyerNKNAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerRefundAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerRefundAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerShippingAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerShippingAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SellerNKNAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SellerNKNAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TradeAsset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TradeAsset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Currency", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Currency = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Price", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Price = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BlockHeight", wireType)
			}
			m.BlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BlockHeight |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipFinalizingOrders(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthFinalizingOrders
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipFinalizingOrders(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowFinalizingOrders
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowFinalizingOrders
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthFinalizingOrders
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupFinalizingOrders
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthFinalizingOrders
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthFinalizingOrders        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowFinalizingOrders          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupFinalizingOrders = fmt.Errorf("proto: unexpected end of group")
)
